function [vxf1, vyf1, vxf2, vyf2, fail] = collision(rxi1, ryi1, rxi2, ryi2,...
                                                vxi1, vyi1, vxi2, vyi2, dt)
% Collision handler for N-body simulation. Solution for final velocities is
% very ugly and comes from a Maple script written by Dr. Abrams. x
% represents the percentage of total energy retained after the collision,
% and f represents the fraction of the energy assigned to body 1. It is
% restricted to the specified range to avoid violating conservation of
% momentum.

x = 0.9;
f = (0.55 - 0.45) * rand(1) + 0.45;
fail = 0;

fprintf('rx initial, body 1: %d\n',rxi1);
fprintf('rx initial, body 2: %d\n',rxi2);
fprintf('ry initial, body 1: %d\n',ryi1);
fprintf('ry initial, body 2: %d\n',ryi2);

% This is a lot of devil magic that Dr. Abrams cooked up in Maple.
vxf1 = -(((2 * vyi1 * x * vxi1 ^ 2 * f) + (2 * vyi1 * x * vxi2 ^ 2 * f) + (2 * vyi1 * x * vyi2 ^ 2 * f) + (2 * vyi2 * x * vxi1 ^ 2 * f) + (2 * vyi2 * x * vxi2 ^ 2 * f) + (2 * vyi2 * x * vyi1 ^ 2 * f) + (2 * vyi2 ^ 3 * x * f) + (2 * vyi1 ^ 3 * x * f) + (2 * vyi1 * vxi1 * vxi2) - (vyi1 * x * vxi1 ^ 2) - (vyi1 * x * vxi2 ^ 2) - (vyi1 * x * vyi2 ^ 2) + (2 * vyi2 * vxi1 * vxi2) - (vyi2 * x * vxi1 ^ 2) - (vyi2 * x * vyi1 ^ 2) - (vyi2 * x * vxi2 ^ 2) + sqrt((-16 * vxi2 ^ 3 * vxi1 ^ 3 * x ^ 2 * f ^ 2 + 16 * vxi2 ^ 3 * vxi1 ^ 3 * x ^ 2 * f - 2 * vxi2 * vxi1 * x ^ 2 * vyi1 ^ 4 - 2 * vxi2 * vxi1 * x ^ 2 * vyi2 ^ 4 - 8 * vxi2 * vxi1 ^ 5 * x ^ 2 * f ^ 2 + 8 * vxi2 * vxi1 ^ 5 * x ^ 2 * f - 8 * vxi2 ^ 5 * vxi1 * x ^ 2 * f ^ 2 + 8 * vxi2 ^ 5 * vxi1 * x ^ 2 * f - 4 * vxi2 * vxi1 ^ 3 * x ^ 2 * vyi1 ^ 2 - 4 * vxi2 * vxi1 ^ 3 * x ^ 2 * vyi2 ^ 2 - 4 * vxi2 ^ 3 * vxi1 * x ^ 2 * vyi1 ^ 2 - 4 * vxi2 ^ 3 * vxi1 * x ^ 2 * vyi2 ^ 2 + 12 * vxi1 ^ 4 * x ^ 2 * f * vxi2 ^ 2 - 12 * vxi1 ^ 2 * x ^ 2 * vxi2 ^ 4 * f ^ 2 + 12 * vxi1 ^ 2 * x ^ 2 * vxi2 ^ 4 * f - 12 * vxi1 ^ 4 * x ^ 2 * f ^ 2 * vxi2 ^ 2 - 8 * vyi1 ^ 2 * x ^ 2 * vxi2 ^ 4 * f ^ 2 - 8 * vyi2 ^ 2 * x ^ 2 * vxi1 ^ 4 * f ^ 2 - 8 * vyi2 ^ 2 * x ^ 2 * vxi2 ^ 4 * f ^ 2 + 12 * vyi2 ^ 2 * vxi1 ^ 3 * vxi2 * x + 12 * vyi2 ^ 2 * vxi1 * vxi2 ^ 3 * x - 4 * vyi2 ^ 2 * x ^ 2 * vxi1 ^ 2 * vxi2 ^ 2 + 8 * vyi2 ^ 2 * x ^ 2 * vxi1 ^ 4 * f + 8 * vyi2 ^ 2 * x ^ 2 * vxi2 ^ 4 * f - 8 * vyi1 ^ 2 * x ^ 2 * vxi1 ^ 4 * f ^ 2 - 4 * vyi1 ^ 4 * x ^ 2 * f ^ 2 * vxi1 ^ 2 - 4 * vyi1 ^ 4 * x ^ 2 * f ^ 2 * vxi2 ^ 2 + 12 * vyi1 ^ 2 * vxi1 ^ 3 * vxi2 * x + 12 * vyi1 ^ 2 * vxi1 * vxi2 ^ 3 * x - 4 * vyi1 ^ 2 * x ^ 2 * vxi1 ^ 2 * vxi2 ^ 2 - 2 * vyi1 ^ 2 * x ^ 2 * vxi1 ^ 2 * vyi2 ^ 2 + 8 * vyi1 ^ 2 * x ^ 2 * vxi1 ^ 4 * f - 2 * vyi1 ^ 2 * x ^ 2 * vxi2 ^ 2 * vyi2 ^ 2 + 8 * vyi1 ^ 2 * x ^ 2 * vxi2 ^ 4 * f - 16 * vyi1 * vxi2 ^ 3 * vyi2 * vxi1 + 4 * vyi1 * vxi2 ^ 4 * vyi2 * x - 8 * vyi1 * vyi2 ^ 3 * vxi1 * vxi2 + 16 * vyi2 ^ 2 * vxi1 ^ 2 * x * vxi2 ^ 2 - 4 * vyi2 ^ 4 * x ^ 2 * f ^ 2 * vxi1 ^ 2 - 4 * vyi2 ^ 4 * x ^ 2 * f ^ 2 * vxi2 ^ 2 + 4 * vyi1 ^ 3 * x * vyi2 * vxi1 ^ 2 + 4 * vyi1 ^ 3 * x * vyi2 * vxi2 ^ 2 + 4 * vyi1 ^ 4 * x * vxi1 * vxi2 + 4 * vyi1 ^ 4 * x ^ 2 * vxi1 ^ 2 * f + 4 * vyi1 ^ 4 * x ^ 2 * vxi2 ^ 2 * f + 4 * vyi2 ^ 3 * x * vyi1 * vxi1 ^ 2 + 4 * vyi2 ^ 3 * x * vyi1 * vxi2 ^ 2 + 4 * vyi2 ^ 4 * x * vxi1 * vxi2 + 4 * vyi2 ^ 4 * x ^ 2 * vxi1 ^ 2 * f + 4 * vyi2 ^ 4 * x ^ 2 * vxi2 ^ 2 * f - 8 * vyi1 ^ 3 * vyi2 * vxi1 * vxi2 - 12 * vyi1 ^ 2 * vyi2 ^ 2 * vxi1 * vxi2 + 4 * vyi1 ^ 2 * vyi2 ^ 2 * x * vxi1 ^ 2 + 4 * vyi1 ^ 2 * vyi2 ^ 2 * x * vxi2 ^ 2 - 24 * vyi1 * vxi1 ^ 2 * vyi2 * vxi2 ^ 2 + 16 * vyi1 ^ 2 * vxi1 ^ 2 * x * vxi2 ^ 2 - 16 * vyi1 * vxi1 ^ 3 * vyi2 * vxi2 + 4 * vyi1 * vxi1 ^ 4 * vyi2 * x + 2 * vxi1 ^ 6 * x - vxi1 ^ 6 * x ^ 2 - 4 * vxi1 ^ 6 * x ^ 2 * f ^ 2 + 4 * vxi1 ^ 6 * x ^ 2 * f - 2 * vyi1 ^ 2 * x ^ 2 * vxi1 ^ 4 - 2 * vyi1 ^ 2 * x ^ 2 * vxi2 ^ 4 + 2 * vyi1 ^ 4 * x * vxi1 ^ 2 + 2 * vyi1 ^ 4 * x * vxi2 ^ 2 - vyi1 ^ 4 * x ^ 2 * vxi1 ^ 2 - vyi1 ^ 4 * x ^ 2 * vxi2 ^ 2 + 2 * vyi2 ^ 4 * x * vxi1 ^ 2 + 2 * vyi2 ^ 4 * x * vxi2 ^ 2 - vyi2 ^ 4 * x ^ 2 * vxi1 ^ 2 - 2 * vxi2 * vxi1 ^ 5 * x ^ 2 - 2 * vxi2 ^ 5 * vxi1 * x ^ 2 - 4 * vxi2 ^ 3 * vxi1 ^ 3 * x ^ 2 + 14 * vxi1 ^ 2 * vxi2 ^ 4 * x - 3 * vxi1 ^ 2 * x ^ 2 * vxi2 ^ 4 - 3 * vxi1 ^ 4 * x ^ 2 * vxi2 ^ 2 + 8 * vxi1 ^ 5 * vxi2 * x + 16 * vxi1 ^ 3 * vxi2 ^ 3 * x + 14 * vxi1 ^ 4 * x * vxi2 ^ 2 - 4 * vxi2 ^ 6 * x ^ 2 * f ^ 2 + 4 * vxi2 ^ 6 * x ^ 2 * f + 8 * vxi2 ^ 5 * vxi1 * x - 2 * vyi2 ^ 4 * vxi1 * vxi2 - 2 * vyi2 ^ 2 * x ^ 2 * vxi1 ^ 4 - 2 * vyi2 ^ 2 * x ^ 2 * vxi2 ^ 4 - vyi2 ^ 4 * x ^ 2 * vxi2 ^ 2 - 4 * vyi1 ^ 3 * vyi2 * vxi1 ^ 2 - 4 * vyi1 ^ 3 * vyi2 * vxi2 ^ 2 - 6 * vyi1 ^ 2 * vyi2 ^ 2 * vxi1 ^ 2 - 6 * vyi1 ^ 2 * vyi2 ^ 2 * vxi2 ^ 2 - 12 * vyi1 ^ 2 * vxi1 ^ 2 * vxi2 ^ 2 - 4 * vyi1 * vxi1 ^ 4 * vyi2 - 8 * vyi1 ^ 2 * vxi1 ^ 3 * vxi2 + 4 * vyi1 ^ 2 * vxi1 ^ 4 * x - 4 * vyi1 * vxi1 ^ 2 * vyi2 ^ 3 - 4 * vyi1 * vxi2 ^ 4 * vyi2 - 8 * vyi1 ^ 2 * vxi2 ^ 3 * vxi1 + 4 * vyi1 ^ 2 * vxi2 ^ 4 * x - 4 * vyi1 * vxi2 ^ 2 * vyi2 ^ 3 - 12 * vyi2 ^ 2 * vxi1 ^ 2 * vxi2 ^ 2 - 8 * vyi2 ^ 2 * vxi1 ^ 3 * vxi2 + 4 * vyi2 ^ 2 * vxi1 ^ 4 * x - 8 * vyi2 ^ 2 * vxi2 ^ 3 * vxi1 + 4 * vyi2 ^ 2 * vxi2 ^ 4 * x - 2 * vyi1 ^ 4 * vxi1 * vxi2 - vxi1 ^ 6 - vxi2 ^ 6 - 2 * vyi2 ^ 2 * vxi1 ^ 4 - vyi2 ^ 4 * vxi1 ^ 2 - 2 * vyi2 ^ 2 * vxi2 ^ 4 - vyi2 ^ 4 * vxi2 ^ 2 - 15 * vxi1 ^ 4 * vxi2 ^ 2 - 6 * vxi1 ^ 5 * vxi2 - 20 * vxi1 ^ 3 * vxi2 ^ 3 - 15 * vxi1 ^ 2 * vxi2 ^ 4 - 6 * vxi2 ^ 5 * vxi1 + 2 * vxi2 ^ 6 * x - vxi2 ^ 6 * x ^ 2 - 2 * vyi1 ^ 2 * vxi1 ^ 4 - vyi1 ^ 4 * vxi1 ^ 2 - 2 * vyi1 ^ 2 * vxi2 ^ 4 - vyi1 ^ 4 * vxi2 ^ 2 + 16 * vxi2 ^ 3 * vxi1 * x ^ 2 * f * vyi2 ^ 2 - 16 * vxi2 * vxi1 ^ 3 * x ^ 2 * f ^ 2 * vyi2 ^ 2 - 16 * vxi2 * vxi1 ^ 3 * x ^ 2 * f ^ 2 * vyi1 ^ 2 + 16 * vxi2 * vxi1 ^ 3 * x ^ 2 * f * vyi1 ^ 2 + 16 * vxi2 * vxi1 ^ 3 * x ^ 2 * f * vyi2 ^ 2 - 16 * vxi2 ^ 3 * vxi1 * x ^ 2 * f ^ 2 * vyi2 ^ 2 - 16 * vxi2 ^ 3 * vxi1 * x ^ 2 * f ^ 2 * vyi1 ^ 2 + 16 * vxi2 ^ 3 * vxi1 * x ^ 2 * f * vyi1 ^ 2 - 8 * vxi2 * vxi1 * x ^ 2 * vyi2 ^ 4 * f ^ 2 + 8 * vxi2 * vxi1 * x ^ 2 * vyi2 ^ 4 * f - 8 * vxi2 * vxi1 * x ^ 2 * vyi1 ^ 4 * f ^ 2 + 8 * vxi2 * vxi1 * x ^ 2 * vyi1 ^ 4 * f - 4 * vxi2 * vxi1 * x ^ 2 * vyi1 ^ 2 * vyi2 ^ 2 - 16 * vyi2 ^ 2 * x ^ 2 * vxi1 ^ 2 * f ^ 2 * vxi2 ^ 2 - 16 * vyi1 ^ 2 * x ^ 2 * vxi1 ^ 2 * f ^ 2 * vxi2 ^ 2 - 8 * vyi1 ^ 2 * x ^ 2 * vxi1 ^ 2 * f ^ 2 * vyi2 ^ 2 - 8 * vyi1 ^ 2 * x ^ 2 * vxi2 ^ 2 * f ^ 2 * vyi2 ^ 2 + 8 * vyi1 * vxi1 ^ 3 * vxi2 * vyi2 * x + 8 * vyi1 * vxi1 * vxi2 ^ 3 * vyi2 * x + 16 * vyi1 ^ 2 * x ^ 2 * vxi1 ^ 2 * vxi2 ^ 2 * f + 8 * vyi1 ^ 2 * x ^ 2 * vxi1 ^ 2 * vyi2 ^ 2 * f + 8 * vyi1 ^ 2 * x ^ 2 * vxi2 ^ 2 * vyi2 ^ 2 * f + 16 * vyi2 ^ 2 * x ^ 2 * vxi1 ^ 2 * vxi2 ^ 2 * f + 8 * vyi1 * vxi1 ^ 2 * vyi2 * x * vxi2 ^ 2 + 8 * vyi1 ^ 2 * vxi1 * vxi2 * x * vyi2 ^ 2 + 8 * vyi1 ^ 3 * x * vyi2 * vxi1 * vxi2 + 8 * vyi2 ^ 3 * x * vyi1 * vxi1 * vxi2 - 16 * vxi2 * vxi1 * x ^ 2 * vyi2 ^ 2 * f ^ 2 * vyi1 ^ 2 + 16 * vxi2 * vxi1 * x ^ 2 * vyi2 ^ 2 * f * vyi1 ^ 2)) + (vyi1 ^ 3) + (vyi2 ^ 3) - (vyi1 ^ 3 * x) - (vyi2 ^ 3 * x) + (3 * vyi1 ^ 2 * vyi2) + (vyi1 * vxi1 ^ 2) + (vyi1 * vxi2 ^ 2) + (3 * vyi1 * vyi2 ^ 2) + (vyi2 * vxi1 ^ 2) + (vyi2 * vxi2 ^ 2)) / (vyi2 ^ 2 + vxi1 ^ 2 + 2 * vyi2 * vyi1 + vxi2 ^ 2 + vyi1 ^ 2 + 2 * vxi2 * vxi1) * vyi1 + ((2 * vyi1 * x * vxi1 ^ 2 * f) + (2 * vyi1 * x * vxi2 ^ 2 * f) + (2 * vyi1 * x * vyi2 ^ 2 * f) + (2 * vyi2 * x * vxi1 ^ 2 * f) + (2 * vyi2 * x * vxi2 ^ 2 * f) + (2 * vyi2 * x * vyi1 ^ 2 * f) + (2 * vyi2 ^ 3 * x * f) + (2 * vyi1 ^ 3 * x * f) + (2 * vyi1 * vxi1 * vxi2) - (vyi1 * x * vxi1 ^ 2) - (vyi1 * x * vxi2 ^ 2) - (vyi1 * x * vyi2 ^ 2) + (2 * vyi2 * vxi1 * vxi2) - (vyi2 * x * vxi1 ^ 2) - (vyi2 * x * vyi1 ^ 2) - (vyi2 * x * vxi2 ^ 2) + sqrt((-16 * vxi2 ^ 3 * vxi1 ^ 3 * x ^ 2 * f ^ 2 + 16 * vxi2 ^ 3 * vxi1 ^ 3 * x ^ 2 * f - 2 * vxi2 * vxi1 * x ^ 2 * vyi1 ^ 4 - 2 * vxi2 * vxi1 * x ^ 2 * vyi2 ^ 4 - 8 * vxi2 * vxi1 ^ 5 * x ^ 2 * f ^ 2 + 8 * vxi2 * vxi1 ^ 5 * x ^ 2 * f - 8 * vxi2 ^ 5 * vxi1 * x ^ 2 * f ^ 2 + 8 * vxi2 ^ 5 * vxi1 * x ^ 2 * f - 4 * vxi2 * vxi1 ^ 3 * x ^ 2 * vyi1 ^ 2 - 4 * vxi2 * vxi1 ^ 3 * x ^ 2 * vyi2 ^ 2 - 4 * vxi2 ^ 3 * vxi1 * x ^ 2 * vyi1 ^ 2 - 4 * vxi2 ^ 3 * vxi1 * x ^ 2 * vyi2 ^ 2 + 12 * vxi1 ^ 4 * x ^ 2 * f * vxi2 ^ 2 - 12 * vxi1 ^ 2 * x ^ 2 * vxi2 ^ 4 * f ^ 2 + 12 * vxi1 ^ 2 * x ^ 2 * vxi2 ^ 4 * f - 12 * vxi1 ^ 4 * x ^ 2 * f ^ 2 * vxi2 ^ 2 - 8 * vyi1 ^ 2 * x ^ 2 * vxi2 ^ 4 * f ^ 2 - 8 * vyi2 ^ 2 * x ^ 2 * vxi1 ^ 4 * f ^ 2 - 8 * vyi2 ^ 2 * x ^ 2 * vxi2 ^ 4 * f ^ 2 + 12 * vyi2 ^ 2 * vxi1 ^ 3 * vxi2 * x + 12 * vyi2 ^ 2 * vxi1 * vxi2 ^ 3 * x - 4 * vyi2 ^ 2 * x ^ 2 * vxi1 ^ 2 * vxi2 ^ 2 + 8 * vyi2 ^ 2 * x ^ 2 * vxi1 ^ 4 * f + 8 * vyi2 ^ 2 * x ^ 2 * vxi2 ^ 4 * f - 8 * vyi1 ^ 2 * x ^ 2 * vxi1 ^ 4 * f ^ 2 - 4 * vyi1 ^ 4 * x ^ 2 * f ^ 2 * vxi1 ^ 2 - 4 * vyi1 ^ 4 * x ^ 2 * f ^ 2 * vxi2 ^ 2 + 12 * vyi1 ^ 2 * vxi1 ^ 3 * vxi2 * x + 12 * vyi1 ^ 2 * vxi1 * vxi2 ^ 3 * x - 4 * vyi1 ^ 2 * x ^ 2 * vxi1 ^ 2 * vxi2 ^ 2 - 2 * vyi1 ^ 2 * x ^ 2 * vxi1 ^ 2 * vyi2 ^ 2 + 8 * vyi1 ^ 2 * x ^ 2 * vxi1 ^ 4 * f - 2 * vyi1 ^ 2 * x ^ 2 * vxi2 ^ 2 * vyi2 ^ 2 + 8 * vyi1 ^ 2 * x ^ 2 * vxi2 ^ 4 * f - 16 * vyi1 * vxi2 ^ 3 * vyi2 * vxi1 + 4 * vyi1 * vxi2 ^ 4 * vyi2 * x - 8 * vyi1 * vyi2 ^ 3 * vxi1 * vxi2 + 16 * vyi2 ^ 2 * vxi1 ^ 2 * x * vxi2 ^ 2 - 4 * vyi2 ^ 4 * x ^ 2 * f ^ 2 * vxi1 ^ 2 - 4 * vyi2 ^ 4 * x ^ 2 * f ^ 2 * vxi2 ^ 2 + 4 * vyi1 ^ 3 * x * vyi2 * vxi1 ^ 2 + 4 * vyi1 ^ 3 * x * vyi2 * vxi2 ^ 2 + 4 * vyi1 ^ 4 * x * vxi1 * vxi2 + 4 * vyi1 ^ 4 * x ^ 2 * vxi1 ^ 2 * f + 4 * vyi1 ^ 4 * x ^ 2 * vxi2 ^ 2 * f + 4 * vyi2 ^ 3 * x * vyi1 * vxi1 ^ 2 + 4 * vyi2 ^ 3 * x * vyi1 * vxi2 ^ 2 + 4 * vyi2 ^ 4 * x * vxi1 * vxi2 + 4 * vyi2 ^ 4 * x ^ 2 * vxi1 ^ 2 * f + 4 * vyi2 ^ 4 * x ^ 2 * vxi2 ^ 2 * f - 8 * vyi1 ^ 3 * vyi2 * vxi1 * vxi2 - 12 * vyi1 ^ 2 * vyi2 ^ 2 * vxi1 * vxi2 + 4 * vyi1 ^ 2 * vyi2 ^ 2 * x * vxi1 ^ 2 + 4 * vyi1 ^ 2 * vyi2 ^ 2 * x * vxi2 ^ 2 - 24 * vyi1 * vxi1 ^ 2 * vyi2 * vxi2 ^ 2 + 16 * vyi1 ^ 2 * vxi1 ^ 2 * x * vxi2 ^ 2 - 16 * vyi1 * vxi1 ^ 3 * vyi2 * vxi2 + 4 * vyi1 * vxi1 ^ 4 * vyi2 * x + 2 * vxi1 ^ 6 * x - vxi1 ^ 6 * x ^ 2 - 4 * vxi1 ^ 6 * x ^ 2 * f ^ 2 + 4 * vxi1 ^ 6 * x ^ 2 * f - 2 * vyi1 ^ 2 * x ^ 2 * vxi1 ^ 4 - 2 * vyi1 ^ 2 * x ^ 2 * vxi2 ^ 4 + 2 * vyi1 ^ 4 * x * vxi1 ^ 2 + 2 * vyi1 ^ 4 * x * vxi2 ^ 2 - vyi1 ^ 4 * x ^ 2 * vxi1 ^ 2 - vyi1 ^ 4 * x ^ 2 * vxi2 ^ 2 + 2 * vyi2 ^ 4 * x * vxi1 ^ 2 + 2 * vyi2 ^ 4 * x * vxi2 ^ 2 - vyi2 ^ 4 * x ^ 2 * vxi1 ^ 2 - 2 * vxi2 * vxi1 ^ 5 * x ^ 2 - 2 * vxi2 ^ 5 * vxi1 * x ^ 2 - 4 * vxi2 ^ 3 * vxi1 ^ 3 * x ^ 2 + 14 * vxi1 ^ 2 * vxi2 ^ 4 * x - 3 * vxi1 ^ 2 * x ^ 2 * vxi2 ^ 4 - 3 * vxi1 ^ 4 * x ^ 2 * vxi2 ^ 2 + 8 * vxi1 ^ 5 * vxi2 * x + 16 * vxi1 ^ 3 * vxi2 ^ 3 * x + 14 * vxi1 ^ 4 * x * vxi2 ^ 2 - 4 * vxi2 ^ 6 * x ^ 2 * f ^ 2 + 4 * vxi2 ^ 6 * x ^ 2 * f + 8 * vxi2 ^ 5 * vxi1 * x - 2 * vyi2 ^ 4 * vxi1 * vxi2 - 2 * vyi2 ^ 2 * x ^ 2 * vxi1 ^ 4 - 2 * vyi2 ^ 2 * x ^ 2 * vxi2 ^ 4 - vyi2 ^ 4 * x ^ 2 * vxi2 ^ 2 - 4 * vyi1 ^ 3 * vyi2 * vxi1 ^ 2 - 4 * vyi1 ^ 3 * vyi2 * vxi2 ^ 2 - 6 * vyi1 ^ 2 * vyi2 ^ 2 * vxi1 ^ 2 - 6 * vyi1 ^ 2 * vyi2 ^ 2 * vxi2 ^ 2 - 12 * vyi1 ^ 2 * vxi1 ^ 2 * vxi2 ^ 2 - 4 * vyi1 * vxi1 ^ 4 * vyi2 - 8 * vyi1 ^ 2 * vxi1 ^ 3 * vxi2 + 4 * vyi1 ^ 2 * vxi1 ^ 4 * x - 4 * vyi1 * vxi1 ^ 2 * vyi2 ^ 3 - 4 * vyi1 * vxi2 ^ 4 * vyi2 - 8 * vyi1 ^ 2 * vxi2 ^ 3 * vxi1 + 4 * vyi1 ^ 2 * vxi2 ^ 4 * x - 4 * vyi1 * vxi2 ^ 2 * vyi2 ^ 3 - 12 * vyi2 ^ 2 * vxi1 ^ 2 * vxi2 ^ 2 - 8 * vyi2 ^ 2 * vxi1 ^ 3 * vxi2 + 4 * vyi2 ^ 2 * vxi1 ^ 4 * x - 8 * vyi2 ^ 2 * vxi2 ^ 3 * vxi1 + 4 * vyi2 ^ 2 * vxi2 ^ 4 * x - 2 * vyi1 ^ 4 * vxi1 * vxi2 - vxi1 ^ 6 - vxi2 ^ 6 - 2 * vyi2 ^ 2 * vxi1 ^ 4 - vyi2 ^ 4 * vxi1 ^ 2 - 2 * vyi2 ^ 2 * vxi2 ^ 4 - vyi2 ^ 4 * vxi2 ^ 2 - 15 * vxi1 ^ 4 * vxi2 ^ 2 - 6 * vxi1 ^ 5 * vxi2 - 20 * vxi1 ^ 3 * vxi2 ^ 3 - 15 * vxi1 ^ 2 * vxi2 ^ 4 - 6 * vxi2 ^ 5 * vxi1 + 2 * vxi2 ^ 6 * x - vxi2 ^ 6 * x ^ 2 - 2 * vyi1 ^ 2 * vxi1 ^ 4 - vyi1 ^ 4 * vxi1 ^ 2 - 2 * vyi1 ^ 2 * vxi2 ^ 4 - vyi1 ^ 4 * vxi2 ^ 2 + 16 * vxi2 ^ 3 * vxi1 * x ^ 2 * f * vyi2 ^ 2 - 16 * vxi2 * vxi1 ^ 3 * x ^ 2 * f ^ 2 * vyi2 ^ 2 - 16 * vxi2 * vxi1 ^ 3 * x ^ 2 * f ^ 2 * vyi1 ^ 2 + 16 * vxi2 * vxi1 ^ 3 * x ^ 2 * f * vyi1 ^ 2 + 16 * vxi2 * vxi1 ^ 3 * x ^ 2 * f * vyi2 ^ 2 - 16 * vxi2 ^ 3 * vxi1 * x ^ 2 * f ^ 2 * vyi2 ^ 2 - 16 * vxi2 ^ 3 * vxi1 * x ^ 2 * f ^ 2 * vyi1 ^ 2 + 16 * vxi2 ^ 3 * vxi1 * x ^ 2 * f * vyi1 ^ 2 - 8 * vxi2 * vxi1 * x ^ 2 * vyi2 ^ 4 * f ^ 2 + 8 * vxi2 * vxi1 * x ^ 2 * vyi2 ^ 4 * f - 8 * vxi2 * vxi1 * x ^ 2 * vyi1 ^ 4 * f ^ 2 + 8 * vxi2 * vxi1 * x ^ 2 * vyi1 ^ 4 * f - 4 * vxi2 * vxi1 * x ^ 2 * vyi1 ^ 2 * vyi2 ^ 2 - 16 * vyi2 ^ 2 * x ^ 2 * vxi1 ^ 2 * f ^ 2 * vxi2 ^ 2 - 16 * vyi1 ^ 2 * x ^ 2 * vxi1 ^ 2 * f ^ 2 * vxi2 ^ 2 - 8 * vyi1 ^ 2 * x ^ 2 * vxi1 ^ 2 * f ^ 2 * vyi2 ^ 2 - 8 * vyi1 ^ 2 * x ^ 2 * vxi2 ^ 2 * f ^ 2 * vyi2 ^ 2 + 8 * vyi1 * vxi1 ^ 3 * vxi2 * vyi2 * x + 8 * vyi1 * vxi1 * vxi2 ^ 3 * vyi2 * x + 16 * vyi1 ^ 2 * x ^ 2 * vxi1 ^ 2 * vxi2 ^ 2 * f + 8 * vyi1 ^ 2 * x ^ 2 * vxi1 ^ 2 * vyi2 ^ 2 * f + 8 * vyi1 ^ 2 * x ^ 2 * vxi2 ^ 2 * vyi2 ^ 2 * f + 16 * vyi2 ^ 2 * x ^ 2 * vxi1 ^ 2 * vxi2 ^ 2 * f + 8 * vyi1 * vxi1 ^ 2 * vyi2 * x * vxi2 ^ 2 + 8 * vyi1 ^ 2 * vxi1 * vxi2 * x * vyi2 ^ 2 + 8 * vyi1 ^ 3 * x * vyi2 * vxi1 * vxi2 + 8 * vyi2 ^ 3 * x * vyi1 * vxi1 * vxi2 - 16 * vxi2 * vxi1 * x ^ 2 * vyi2 ^ 2 * f ^ 2 * vyi1 ^ 2 + 16 * vxi2 * vxi1 * x ^ 2 * vyi2 ^ 2 * f * vyi1 ^ 2)) + (vyi1 ^ 3) + (vyi2 ^ 3) - (vyi1 ^ 3 * x) - (vyi2 ^ 3 * x) + (3 * vyi1 ^ 2 * vyi2) + (vyi1 * vxi1 ^ 2) + (vyi1 * vxi2 ^ 2) + (3 * vyi1 * vyi2 ^ 2) + (vyi2 * vxi1 ^ 2) + (vyi2 * vxi2 ^ 2)) / (vyi2 ^ 2 + vxi1 ^ 2 + 2 * vyi2 * vyi1 + vxi2 ^ 2 + vyi1 ^ 2 + 2 * vxi2 * vxi1) * vyi2 - (2 * vyi2 * vyi1) - (2 * vxi2 * vxi1) - (vxi1 ^ 2) - (vyi1 ^ 2) - (vxi2 ^ 2) - (vyi2 ^ 2) - (2 * x * vxi1 ^ 2 * f) - (2 * x * vxi2 ^ 2 * f) - (2 * x * vyi2 ^ 2 * f) - (2 * x * vyi1 ^ 2 * f) + (x * vxi1 ^ 2) + (vyi1 ^ 2 * x) + (vxi2 ^ 2 * x) + (vyi2 ^ 2 * x)) / (vxi1 + vxi2) / 0.2e1;
vyf1 = ((2 * vyi1 * x * vxi1 ^ 2 * f) + (2 * vyi1 * x * vxi2 ^ 2 * f) + (2 * vyi1 * x * vyi2 ^ 2 * f) + (2 * vyi2 * x * vxi1 ^ 2 * f) + (2 * vyi2 * x * vxi2 ^ 2 * f) + (2 * vyi2 * x * vyi1 ^ 2 * f) + (2 * vyi2 ^ 3 * x * f) + (2 * vyi1 ^ 3 * x * f) + (2 * vyi1 * vxi1 * vxi2) - (vyi1 * x * vxi1 ^ 2) - (vyi1 * x * vxi2 ^ 2) - (vyi1 * x * vyi2 ^ 2) + (2 * vyi2 * vxi1 * vxi2) - (vyi2 * x * vxi1 ^ 2) - (vyi2 * x * vyi1 ^ 2) - (vyi2 * x * vxi2 ^ 2) + sqrt((-16 * vxi2 ^ 3 * vxi1 ^ 3 * x ^ 2 * f ^ 2 + 16 * vxi2 ^ 3 * vxi1 ^ 3 * x ^ 2 * f - 2 * vxi2 * vxi1 * x ^ 2 * vyi1 ^ 4 - 2 * vxi2 * vxi1 * x ^ 2 * vyi2 ^ 4 - 8 * vxi2 * vxi1 ^ 5 * x ^ 2 * f ^ 2 + 8 * vxi2 * vxi1 ^ 5 * x ^ 2 * f - 8 * vxi2 ^ 5 * vxi1 * x ^ 2 * f ^ 2 + 8 * vxi2 ^ 5 * vxi1 * x ^ 2 * f - 4 * vxi2 * vxi1 ^ 3 * x ^ 2 * vyi1 ^ 2 - 4 * vxi2 * vxi1 ^ 3 * x ^ 2 * vyi2 ^ 2 - 4 * vxi2 ^ 3 * vxi1 * x ^ 2 * vyi1 ^ 2 - 4 * vxi2 ^ 3 * vxi1 * x ^ 2 * vyi2 ^ 2 + 12 * vxi1 ^ 4 * x ^ 2 * f * vxi2 ^ 2 - 12 * vxi1 ^ 2 * x ^ 2 * vxi2 ^ 4 * f ^ 2 + 12 * vxi1 ^ 2 * x ^ 2 * vxi2 ^ 4 * f - 12 * vxi1 ^ 4 * x ^ 2 * f ^ 2 * vxi2 ^ 2 - 8 * vyi1 ^ 2 * x ^ 2 * vxi2 ^ 4 * f ^ 2 - 8 * vyi2 ^ 2 * x ^ 2 * vxi1 ^ 4 * f ^ 2 - 8 * vyi2 ^ 2 * x ^ 2 * vxi2 ^ 4 * f ^ 2 + 12 * vyi2 ^ 2 * vxi1 ^ 3 * vxi2 * x + 12 * vyi2 ^ 2 * vxi1 * vxi2 ^ 3 * x - 4 * vyi2 ^ 2 * x ^ 2 * vxi1 ^ 2 * vxi2 ^ 2 + 8 * vyi2 ^ 2 * x ^ 2 * vxi1 ^ 4 * f + 8 * vyi2 ^ 2 * x ^ 2 * vxi2 ^ 4 * f - 8 * vyi1 ^ 2 * x ^ 2 * vxi1 ^ 4 * f ^ 2 - 4 * vyi1 ^ 4 * x ^ 2 * f ^ 2 * vxi1 ^ 2 - 4 * vyi1 ^ 4 * x ^ 2 * f ^ 2 * vxi2 ^ 2 + 12 * vyi1 ^ 2 * vxi1 ^ 3 * vxi2 * x + 12 * vyi1 ^ 2 * vxi1 * vxi2 ^ 3 * x - 4 * vyi1 ^ 2 * x ^ 2 * vxi1 ^ 2 * vxi2 ^ 2 - 2 * vyi1 ^ 2 * x ^ 2 * vxi1 ^ 2 * vyi2 ^ 2 + 8 * vyi1 ^ 2 * x ^ 2 * vxi1 ^ 4 * f - 2 * vyi1 ^ 2 * x ^ 2 * vxi2 ^ 2 * vyi2 ^ 2 + 8 * vyi1 ^ 2 * x ^ 2 * vxi2 ^ 4 * f - 16 * vyi1 * vxi2 ^ 3 * vyi2 * vxi1 + 4 * vyi1 * vxi2 ^ 4 * vyi2 * x - 8 * vyi1 * vyi2 ^ 3 * vxi1 * vxi2 + 16 * vyi2 ^ 2 * vxi1 ^ 2 * x * vxi2 ^ 2 - 4 * vyi2 ^ 4 * x ^ 2 * f ^ 2 * vxi1 ^ 2 - 4 * vyi2 ^ 4 * x ^ 2 * f ^ 2 * vxi2 ^ 2 + 4 * vyi1 ^ 3 * x * vyi2 * vxi1 ^ 2 + 4 * vyi1 ^ 3 * x * vyi2 * vxi2 ^ 2 + 4 * vyi1 ^ 4 * x * vxi1 * vxi2 + 4 * vyi1 ^ 4 * x ^ 2 * vxi1 ^ 2 * f + 4 * vyi1 ^ 4 * x ^ 2 * vxi2 ^ 2 * f + 4 * vyi2 ^ 3 * x * vyi1 * vxi1 ^ 2 + 4 * vyi2 ^ 3 * x * vyi1 * vxi2 ^ 2 + 4 * vyi2 ^ 4 * x * vxi1 * vxi2 + 4 * vyi2 ^ 4 * x ^ 2 * vxi1 ^ 2 * f + 4 * vyi2 ^ 4 * x ^ 2 * vxi2 ^ 2 * f - 8 * vyi1 ^ 3 * vyi2 * vxi1 * vxi2 - 12 * vyi1 ^ 2 * vyi2 ^ 2 * vxi1 * vxi2 + 4 * vyi1 ^ 2 * vyi2 ^ 2 * x * vxi1 ^ 2 + 4 * vyi1 ^ 2 * vyi2 ^ 2 * x * vxi2 ^ 2 - 24 * vyi1 * vxi1 ^ 2 * vyi2 * vxi2 ^ 2 + 16 * vyi1 ^ 2 * vxi1 ^ 2 * x * vxi2 ^ 2 - 16 * vyi1 * vxi1 ^ 3 * vyi2 * vxi2 + 4 * vyi1 * vxi1 ^ 4 * vyi2 * x + 2 * vxi1 ^ 6 * x - vxi1 ^ 6 * x ^ 2 - 4 * vxi1 ^ 6 * x ^ 2 * f ^ 2 + 4 * vxi1 ^ 6 * x ^ 2 * f - 2 * vyi1 ^ 2 * x ^ 2 * vxi1 ^ 4 - 2 * vyi1 ^ 2 * x ^ 2 * vxi2 ^ 4 + 2 * vyi1 ^ 4 * x * vxi1 ^ 2 + 2 * vyi1 ^ 4 * x * vxi2 ^ 2 - vyi1 ^ 4 * x ^ 2 * vxi1 ^ 2 - vyi1 ^ 4 * x ^ 2 * vxi2 ^ 2 + 2 * vyi2 ^ 4 * x * vxi1 ^ 2 + 2 * vyi2 ^ 4 * x * vxi2 ^ 2 - vyi2 ^ 4 * x ^ 2 * vxi1 ^ 2 - 2 * vxi2 * vxi1 ^ 5 * x ^ 2 - 2 * vxi2 ^ 5 * vxi1 * x ^ 2 - 4 * vxi2 ^ 3 * vxi1 ^ 3 * x ^ 2 + 14 * vxi1 ^ 2 * vxi2 ^ 4 * x - 3 * vxi1 ^ 2 * x ^ 2 * vxi2 ^ 4 - 3 * vxi1 ^ 4 * x ^ 2 * vxi2 ^ 2 + 8 * vxi1 ^ 5 * vxi2 * x + 16 * vxi1 ^ 3 * vxi2 ^ 3 * x + 14 * vxi1 ^ 4 * x * vxi2 ^ 2 - 4 * vxi2 ^ 6 * x ^ 2 * f ^ 2 + 4 * vxi2 ^ 6 * x ^ 2 * f + 8 * vxi2 ^ 5 * vxi1 * x - 2 * vyi2 ^ 4 * vxi1 * vxi2 - 2 * vyi2 ^ 2 * x ^ 2 * vxi1 ^ 4 - 2 * vyi2 ^ 2 * x ^ 2 * vxi2 ^ 4 - vyi2 ^ 4 * x ^ 2 * vxi2 ^ 2 - 4 * vyi1 ^ 3 * vyi2 * vxi1 ^ 2 - 4 * vyi1 ^ 3 * vyi2 * vxi2 ^ 2 - 6 * vyi1 ^ 2 * vyi2 ^ 2 * vxi1 ^ 2 - 6 * vyi1 ^ 2 * vyi2 ^ 2 * vxi2 ^ 2 - 12 * vyi1 ^ 2 * vxi1 ^ 2 * vxi2 ^ 2 - 4 * vyi1 * vxi1 ^ 4 * vyi2 - 8 * vyi1 ^ 2 * vxi1 ^ 3 * vxi2 + 4 * vyi1 ^ 2 * vxi1 ^ 4 * x - 4 * vyi1 * vxi1 ^ 2 * vyi2 ^ 3 - 4 * vyi1 * vxi2 ^ 4 * vyi2 - 8 * vyi1 ^ 2 * vxi2 ^ 3 * vxi1 + 4 * vyi1 ^ 2 * vxi2 ^ 4 * x - 4 * vyi1 * vxi2 ^ 2 * vyi2 ^ 3 - 12 * vyi2 ^ 2 * vxi1 ^ 2 * vxi2 ^ 2 - 8 * vyi2 ^ 2 * vxi1 ^ 3 * vxi2 + 4 * vyi2 ^ 2 * vxi1 ^ 4 * x - 8 * vyi2 ^ 2 * vxi2 ^ 3 * vxi1 + 4 * vyi2 ^ 2 * vxi2 ^ 4 * x - 2 * vyi1 ^ 4 * vxi1 * vxi2 - vxi1 ^ 6 - vxi2 ^ 6 - 2 * vyi2 ^ 2 * vxi1 ^ 4 - vyi2 ^ 4 * vxi1 ^ 2 - 2 * vyi2 ^ 2 * vxi2 ^ 4 - vyi2 ^ 4 * vxi2 ^ 2 - 15 * vxi1 ^ 4 * vxi2 ^ 2 - 6 * vxi1 ^ 5 * vxi2 - 20 * vxi1 ^ 3 * vxi2 ^ 3 - 15 * vxi1 ^ 2 * vxi2 ^ 4 - 6 * vxi2 ^ 5 * vxi1 + 2 * vxi2 ^ 6 * x - vxi2 ^ 6 * x ^ 2 - 2 * vyi1 ^ 2 * vxi1 ^ 4 - vyi1 ^ 4 * vxi1 ^ 2 - 2 * vyi1 ^ 2 * vxi2 ^ 4 - vyi1 ^ 4 * vxi2 ^ 2 + 16 * vxi2 ^ 3 * vxi1 * x ^ 2 * f * vyi2 ^ 2 - 16 * vxi2 * vxi1 ^ 3 * x ^ 2 * f ^ 2 * vyi2 ^ 2 - 16 * vxi2 * vxi1 ^ 3 * x ^ 2 * f ^ 2 * vyi1 ^ 2 + 16 * vxi2 * vxi1 ^ 3 * x ^ 2 * f * vyi1 ^ 2 + 16 * vxi2 * vxi1 ^ 3 * x ^ 2 * f * vyi2 ^ 2 - 16 * vxi2 ^ 3 * vxi1 * x ^ 2 * f ^ 2 * vyi2 ^ 2 - 16 * vxi2 ^ 3 * vxi1 * x ^ 2 * f ^ 2 * vyi1 ^ 2 + 16 * vxi2 ^ 3 * vxi1 * x ^ 2 * f * vyi1 ^ 2 - 8 * vxi2 * vxi1 * x ^ 2 * vyi2 ^ 4 * f ^ 2 + 8 * vxi2 * vxi1 * x ^ 2 * vyi2 ^ 4 * f - 8 * vxi2 * vxi1 * x ^ 2 * vyi1 ^ 4 * f ^ 2 + 8 * vxi2 * vxi1 * x ^ 2 * vyi1 ^ 4 * f - 4 * vxi2 * vxi1 * x ^ 2 * vyi1 ^ 2 * vyi2 ^ 2 - 16 * vyi2 ^ 2 * x ^ 2 * vxi1 ^ 2 * f ^ 2 * vxi2 ^ 2 - 16 * vyi1 ^ 2 * x ^ 2 * vxi1 ^ 2 * f ^ 2 * vxi2 ^ 2 - 8 * vyi1 ^ 2 * x ^ 2 * vxi1 ^ 2 * f ^ 2 * vyi2 ^ 2 - 8 * vyi1 ^ 2 * x ^ 2 * vxi2 ^ 2 * f ^ 2 * vyi2 ^ 2 + 8 * vyi1 * vxi1 ^ 3 * vxi2 * vyi2 * x + 8 * vyi1 * vxi1 * vxi2 ^ 3 * vyi2 * x + 16 * vyi1 ^ 2 * x ^ 2 * vxi1 ^ 2 * vxi2 ^ 2 * f + 8 * vyi1 ^ 2 * x ^ 2 * vxi1 ^ 2 * vyi2 ^ 2 * f + 8 * vyi1 ^ 2 * x ^ 2 * vxi2 ^ 2 * vyi2 ^ 2 * f + 16 * vyi2 ^ 2 * x ^ 2 * vxi1 ^ 2 * vxi2 ^ 2 * f + 8 * vyi1 * vxi1 ^ 2 * vyi2 * x * vxi2 ^ 2 + 8 * vyi1 ^ 2 * vxi1 * vxi2 * x * vyi2 ^ 2 + 8 * vyi1 ^ 3 * x * vyi2 * vxi1 * vxi2 + 8 * vyi2 ^ 3 * x * vyi1 * vxi1 * vxi2 - 16 * vxi2 * vxi1 * x ^ 2 * vyi2 ^ 2 * f ^ 2 * vyi1 ^ 2 + 16 * vxi2 * vxi1 * x ^ 2 * vyi2 ^ 2 * f * vyi1 ^ 2)) + (vyi1 ^ 3) + (vyi2 ^ 3) - (vyi1 ^ 3 * x) - (vyi2 ^ 3 * x) + (3 * vyi1 ^ 2 * vyi2) + (vyi1 * vxi1 ^ 2) + (vyi1 * vxi2 ^ 2) + (3 * vyi1 * vyi2 ^ 2) + (vyi2 * vxi1 ^ 2) + (vyi2 * vxi2 ^ 2)) / (vyi2 ^ 2 + vxi1 ^ 2 + 2 * vyi2 * vyi1 + vxi2 ^ 2 + vyi1 ^ 2 + 2 * vxi2 * vxi1) / 0.2e1;

vxf2 = (((2 * vyi1 * x * vxi1 ^ 2 * f) + (2 * vyi1 * x * vxi2 ^ 2 * f) + (2 * vyi1 * x * vyi2 ^ 2 * f) + (2 * vyi2 * x * vxi1 ^ 2 * f) + (2 * vyi2 * x * vxi2 ^ 2 * f) + (2 * vyi2 * x * vyi1 ^ 2 * f) + (2 * vyi2 ^ 3 * x * f) + (2 * vyi1 ^ 3 * x * f) + (2 * vyi1 * vxi1 * vxi2) - (vyi1 * x * vxi1 ^ 2) - (vyi1 * x * vxi2 ^ 2) - (vyi1 * x * vyi2 ^ 2) + (2 * vyi2 * vxi1 * vxi2) - (vyi2 * x * vxi1 ^ 2) - (vyi2 * x * vyi1 ^ 2) - (vyi2 * x * vxi2 ^ 2) + sqrt((-16 * vxi2 ^ 3 * vxi1 ^ 3 * x ^ 2 * f ^ 2 + 16 * vxi2 ^ 3 * vxi1 ^ 3 * x ^ 2 * f - 2 * vxi2 * vxi1 * x ^ 2 * vyi1 ^ 4 - 2 * vxi2 * vxi1 * x ^ 2 * vyi2 ^ 4 - 8 * vxi2 * vxi1 ^ 5 * x ^ 2 * f ^ 2 + 8 * vxi2 * vxi1 ^ 5 * x ^ 2 * f - 8 * vxi2 ^ 5 * vxi1 * x ^ 2 * f ^ 2 + 8 * vxi2 ^ 5 * vxi1 * x ^ 2 * f - 4 * vxi2 * vxi1 ^ 3 * x ^ 2 * vyi1 ^ 2 - 4 * vxi2 * vxi1 ^ 3 * x ^ 2 * vyi2 ^ 2 - 4 * vxi2 ^ 3 * vxi1 * x ^ 2 * vyi1 ^ 2 - 4 * vxi2 ^ 3 * vxi1 * x ^ 2 * vyi2 ^ 2 + 12 * vxi1 ^ 4 * x ^ 2 * f * vxi2 ^ 2 - 12 * vxi1 ^ 2 * x ^ 2 * vxi2 ^ 4 * f ^ 2 + 12 * vxi1 ^ 2 * x ^ 2 * vxi2 ^ 4 * f - 12 * vxi1 ^ 4 * x ^ 2 * f ^ 2 * vxi2 ^ 2 - 8 * vyi1 ^ 2 * x ^ 2 * vxi2 ^ 4 * f ^ 2 - 8 * vyi2 ^ 2 * x ^ 2 * vxi1 ^ 4 * f ^ 2 - 8 * vyi2 ^ 2 * x ^ 2 * vxi2 ^ 4 * f ^ 2 + 12 * vyi2 ^ 2 * vxi1 ^ 3 * vxi2 * x + 12 * vyi2 ^ 2 * vxi1 * vxi2 ^ 3 * x - 4 * vyi2 ^ 2 * x ^ 2 * vxi1 ^ 2 * vxi2 ^ 2 + 8 * vyi2 ^ 2 * x ^ 2 * vxi1 ^ 4 * f + 8 * vyi2 ^ 2 * x ^ 2 * vxi2 ^ 4 * f - 8 * vyi1 ^ 2 * x ^ 2 * vxi1 ^ 4 * f ^ 2 - 4 * vyi1 ^ 4 * x ^ 2 * f ^ 2 * vxi1 ^ 2 - 4 * vyi1 ^ 4 * x ^ 2 * f ^ 2 * vxi2 ^ 2 + 12 * vyi1 ^ 2 * vxi1 ^ 3 * vxi2 * x + 12 * vyi1 ^ 2 * vxi1 * vxi2 ^ 3 * x - 4 * vyi1 ^ 2 * x ^ 2 * vxi1 ^ 2 * vxi2 ^ 2 - 2 * vyi1 ^ 2 * x ^ 2 * vxi1 ^ 2 * vyi2 ^ 2 + 8 * vyi1 ^ 2 * x ^ 2 * vxi1 ^ 4 * f - 2 * vyi1 ^ 2 * x ^ 2 * vxi2 ^ 2 * vyi2 ^ 2 + 8 * vyi1 ^ 2 * x ^ 2 * vxi2 ^ 4 * f - 16 * vyi1 * vxi2 ^ 3 * vyi2 * vxi1 + 4 * vyi1 * vxi2 ^ 4 * vyi2 * x - 8 * vyi1 * vyi2 ^ 3 * vxi1 * vxi2 + 16 * vyi2 ^ 2 * vxi1 ^ 2 * x * vxi2 ^ 2 - 4 * vyi2 ^ 4 * x ^ 2 * f ^ 2 * vxi1 ^ 2 - 4 * vyi2 ^ 4 * x ^ 2 * f ^ 2 * vxi2 ^ 2 + 4 * vyi1 ^ 3 * x * vyi2 * vxi1 ^ 2 + 4 * vyi1 ^ 3 * x * vyi2 * vxi2 ^ 2 + 4 * vyi1 ^ 4 * x * vxi1 * vxi2 + 4 * vyi1 ^ 4 * x ^ 2 * vxi1 ^ 2 * f + 4 * vyi1 ^ 4 * x ^ 2 * vxi2 ^ 2 * f + 4 * vyi2 ^ 3 * x * vyi1 * vxi1 ^ 2 + 4 * vyi2 ^ 3 * x * vyi1 * vxi2 ^ 2 + 4 * vyi2 ^ 4 * x * vxi1 * vxi2 + 4 * vyi2 ^ 4 * x ^ 2 * vxi1 ^ 2 * f + 4 * vyi2 ^ 4 * x ^ 2 * vxi2 ^ 2 * f - 8 * vyi1 ^ 3 * vyi2 * vxi1 * vxi2 - 12 * vyi1 ^ 2 * vyi2 ^ 2 * vxi1 * vxi2 + 4 * vyi1 ^ 2 * vyi2 ^ 2 * x * vxi1 ^ 2 + 4 * vyi1 ^ 2 * vyi2 ^ 2 * x * vxi2 ^ 2 - 24 * vyi1 * vxi1 ^ 2 * vyi2 * vxi2 ^ 2 + 16 * vyi1 ^ 2 * vxi1 ^ 2 * x * vxi2 ^ 2 - 16 * vyi1 * vxi1 ^ 3 * vyi2 * vxi2 + 4 * vyi1 * vxi1 ^ 4 * vyi2 * x + 2 * vxi1 ^ 6 * x - vxi1 ^ 6 * x ^ 2 - 4 * vxi1 ^ 6 * x ^ 2 * f ^ 2 + 4 * vxi1 ^ 6 * x ^ 2 * f - 2 * vyi1 ^ 2 * x ^ 2 * vxi1 ^ 4 - 2 * vyi1 ^ 2 * x ^ 2 * vxi2 ^ 4 + 2 * vyi1 ^ 4 * x * vxi1 ^ 2 + 2 * vyi1 ^ 4 * x * vxi2 ^ 2 - vyi1 ^ 4 * x ^ 2 * vxi1 ^ 2 - vyi1 ^ 4 * x ^ 2 * vxi2 ^ 2 + 2 * vyi2 ^ 4 * x * vxi1 ^ 2 + 2 * vyi2 ^ 4 * x * vxi2 ^ 2 - vyi2 ^ 4 * x ^ 2 * vxi1 ^ 2 - 2 * vxi2 * vxi1 ^ 5 * x ^ 2 - 2 * vxi2 ^ 5 * vxi1 * x ^ 2 - 4 * vxi2 ^ 3 * vxi1 ^ 3 * x ^ 2 + 14 * vxi1 ^ 2 * vxi2 ^ 4 * x - 3 * vxi1 ^ 2 * x ^ 2 * vxi2 ^ 4 - 3 * vxi1 ^ 4 * x ^ 2 * vxi2 ^ 2 + 8 * vxi1 ^ 5 * vxi2 * x + 16 * vxi1 ^ 3 * vxi2 ^ 3 * x + 14 * vxi1 ^ 4 * x * vxi2 ^ 2 - 4 * vxi2 ^ 6 * x ^ 2 * f ^ 2 + 4 * vxi2 ^ 6 * x ^ 2 * f + 8 * vxi2 ^ 5 * vxi1 * x - 2 * vyi2 ^ 4 * vxi1 * vxi2 - 2 * vyi2 ^ 2 * x ^ 2 * vxi1 ^ 4 - 2 * vyi2 ^ 2 * x ^ 2 * vxi2 ^ 4 - vyi2 ^ 4 * x ^ 2 * vxi2 ^ 2 - 4 * vyi1 ^ 3 * vyi2 * vxi1 ^ 2 - 4 * vyi1 ^ 3 * vyi2 * vxi2 ^ 2 - 6 * vyi1 ^ 2 * vyi2 ^ 2 * vxi1 ^ 2 - 6 * vyi1 ^ 2 * vyi2 ^ 2 * vxi2 ^ 2 - 12 * vyi1 ^ 2 * vxi1 ^ 2 * vxi2 ^ 2 - 4 * vyi1 * vxi1 ^ 4 * vyi2 - 8 * vyi1 ^ 2 * vxi1 ^ 3 * vxi2 + 4 * vyi1 ^ 2 * vxi1 ^ 4 * x - 4 * vyi1 * vxi1 ^ 2 * vyi2 ^ 3 - 4 * vyi1 * vxi2 ^ 4 * vyi2 - 8 * vyi1 ^ 2 * vxi2 ^ 3 * vxi1 + 4 * vyi1 ^ 2 * vxi2 ^ 4 * x - 4 * vyi1 * vxi2 ^ 2 * vyi2 ^ 3 - 12 * vyi2 ^ 2 * vxi1 ^ 2 * vxi2 ^ 2 - 8 * vyi2 ^ 2 * vxi1 ^ 3 * vxi2 + 4 * vyi2 ^ 2 * vxi1 ^ 4 * x - 8 * vyi2 ^ 2 * vxi2 ^ 3 * vxi1 + 4 * vyi2 ^ 2 * vxi2 ^ 4 * x - 2 * vyi1 ^ 4 * vxi1 * vxi2 - vxi1 ^ 6 - vxi2 ^ 6 - 2 * vyi2 ^ 2 * vxi1 ^ 4 - vyi2 ^ 4 * vxi1 ^ 2 - 2 * vyi2 ^ 2 * vxi2 ^ 4 - vyi2 ^ 4 * vxi2 ^ 2 - 15 * vxi1 ^ 4 * vxi2 ^ 2 - 6 * vxi1 ^ 5 * vxi2 - 20 * vxi1 ^ 3 * vxi2 ^ 3 - 15 * vxi1 ^ 2 * vxi2 ^ 4 - 6 * vxi2 ^ 5 * vxi1 + 2 * vxi2 ^ 6 * x - vxi2 ^ 6 * x ^ 2 - 2 * vyi1 ^ 2 * vxi1 ^ 4 - vyi1 ^ 4 * vxi1 ^ 2 - 2 * vyi1 ^ 2 * vxi2 ^ 4 - vyi1 ^ 4 * vxi2 ^ 2 + 16 * vxi2 ^ 3 * vxi1 * x ^ 2 * f * vyi2 ^ 2 - 16 * vxi2 * vxi1 ^ 3 * x ^ 2 * f ^ 2 * vyi2 ^ 2 - 16 * vxi2 * vxi1 ^ 3 * x ^ 2 * f ^ 2 * vyi1 ^ 2 + 16 * vxi2 * vxi1 ^ 3 * x ^ 2 * f * vyi1 ^ 2 + 16 * vxi2 * vxi1 ^ 3 * x ^ 2 * f * vyi2 ^ 2 - 16 * vxi2 ^ 3 * vxi1 * x ^ 2 * f ^ 2 * vyi2 ^ 2 - 16 * vxi2 ^ 3 * vxi1 * x ^ 2 * f ^ 2 * vyi1 ^ 2 + 16 * vxi2 ^ 3 * vxi1 * x ^ 2 * f * vyi1 ^ 2 - 8 * vxi2 * vxi1 * x ^ 2 * vyi2 ^ 4 * f ^ 2 + 8 * vxi2 * vxi1 * x ^ 2 * vyi2 ^ 4 * f - 8 * vxi2 * vxi1 * x ^ 2 * vyi1 ^ 4 * f ^ 2 + 8 * vxi2 * vxi1 * x ^ 2 * vyi1 ^ 4 * f - 4 * vxi2 * vxi1 * x ^ 2 * vyi1 ^ 2 * vyi2 ^ 2 - 16 * vyi2 ^ 2 * x ^ 2 * vxi1 ^ 2 * f ^ 2 * vxi2 ^ 2 - 16 * vyi1 ^ 2 * x ^ 2 * vxi1 ^ 2 * f ^ 2 * vxi2 ^ 2 - 8 * vyi1 ^ 2 * x ^ 2 * vxi1 ^ 2 * f ^ 2 * vyi2 ^ 2 - 8 * vyi1 ^ 2 * x ^ 2 * vxi2 ^ 2 * f ^ 2 * vyi2 ^ 2 + 8 * vyi1 * vxi1 ^ 3 * vxi2 * vyi2 * x + 8 * vyi1 * vxi1 * vxi2 ^ 3 * vyi2 * x + 16 * vyi1 ^ 2 * x ^ 2 * vxi1 ^ 2 * vxi2 ^ 2 * f + 8 * vyi1 ^ 2 * x ^ 2 * vxi1 ^ 2 * vyi2 ^ 2 * f + 8 * vyi1 ^ 2 * x ^ 2 * vxi2 ^ 2 * vyi2 ^ 2 * f + 16 * vyi2 ^ 2 * x ^ 2 * vxi1 ^ 2 * vxi2 ^ 2 * f + 8 * vyi1 * vxi1 ^ 2 * vyi2 * x * vxi2 ^ 2 + 8 * vyi1 ^ 2 * vxi1 * vxi2 * x * vyi2 ^ 2 + 8 * vyi1 ^ 3 * x * vyi2 * vxi1 * vxi2 + 8 * vyi2 ^ 3 * x * vyi1 * vxi1 * vxi2 - 16 * vxi2 * vxi1 * x ^ 2 * vyi2 ^ 2 * f ^ 2 * vyi1 ^ 2 + 16 * vxi2 * vxi1 * x ^ 2 * vyi2 ^ 2 * f * vyi1 ^ 2)) + (vyi1 ^ 3) + (vyi2 ^ 3) - (vyi1 ^ 3 * x) - (vyi2 ^ 3 * x) + (3 * vyi1 ^ 2 * vyi2) + (vyi1 * vxi1 ^ 2) + (vyi1 * vxi2 ^ 2) + (3 * vyi1 * vyi2 ^ 2) + (vyi2 * vxi1 ^ 2) + (vyi2 * vxi2 ^ 2)) / (vyi2 ^ 2 + vxi1 ^ 2 + 2 * vyi2 * vyi1 + vxi2 ^ 2 + vyi1 ^ 2 + 2 * vxi2 * vxi1) * vyi1 + ((2 * vyi1 * x * vxi1 ^ 2 * f) + (2 * vyi1 * x * vxi2 ^ 2 * f) + (2 * vyi1 * x * vyi2 ^ 2 * f) + (2 * vyi2 * x * vxi1 ^ 2 * f) + (2 * vyi2 * x * vxi2 ^ 2 * f) + (2 * vyi2 * x * vyi1 ^ 2 * f) + (2 * vyi2 ^ 3 * x * f) + (2 * vyi1 ^ 3 * x * f) + (2 * vyi1 * vxi1 * vxi2) - (vyi1 * x * vxi1 ^ 2) - (vyi1 * x * vxi2 ^ 2) - (vyi1 * x * vyi2 ^ 2) + (2 * vyi2 * vxi1 * vxi2) - (vyi2 * x * vxi1 ^ 2) - (vyi2 * x * vyi1 ^ 2) - (vyi2 * x * vxi2 ^ 2) + sqrt((-16 * vxi2 ^ 3 * vxi1 ^ 3 * x ^ 2 * f ^ 2 + 16 * vxi2 ^ 3 * vxi1 ^ 3 * x ^ 2 * f - 2 * vxi2 * vxi1 * x ^ 2 * vyi1 ^ 4 - 2 * vxi2 * vxi1 * x ^ 2 * vyi2 ^ 4 - 8 * vxi2 * vxi1 ^ 5 * x ^ 2 * f ^ 2 + 8 * vxi2 * vxi1 ^ 5 * x ^ 2 * f - 8 * vxi2 ^ 5 * vxi1 * x ^ 2 * f ^ 2 + 8 * vxi2 ^ 5 * vxi1 * x ^ 2 * f - 4 * vxi2 * vxi1 ^ 3 * x ^ 2 * vyi1 ^ 2 - 4 * vxi2 * vxi1 ^ 3 * x ^ 2 * vyi2 ^ 2 - 4 * vxi2 ^ 3 * vxi1 * x ^ 2 * vyi1 ^ 2 - 4 * vxi2 ^ 3 * vxi1 * x ^ 2 * vyi2 ^ 2 + 12 * vxi1 ^ 4 * x ^ 2 * f * vxi2 ^ 2 - 12 * vxi1 ^ 2 * x ^ 2 * vxi2 ^ 4 * f ^ 2 + 12 * vxi1 ^ 2 * x ^ 2 * vxi2 ^ 4 * f - 12 * vxi1 ^ 4 * x ^ 2 * f ^ 2 * vxi2 ^ 2 - 8 * vyi1 ^ 2 * x ^ 2 * vxi2 ^ 4 * f ^ 2 - 8 * vyi2 ^ 2 * x ^ 2 * vxi1 ^ 4 * f ^ 2 - 8 * vyi2 ^ 2 * x ^ 2 * vxi2 ^ 4 * f ^ 2 + 12 * vyi2 ^ 2 * vxi1 ^ 3 * vxi2 * x + 12 * vyi2 ^ 2 * vxi1 * vxi2 ^ 3 * x - 4 * vyi2 ^ 2 * x ^ 2 * vxi1 ^ 2 * vxi2 ^ 2 + 8 * vyi2 ^ 2 * x ^ 2 * vxi1 ^ 4 * f + 8 * vyi2 ^ 2 * x ^ 2 * vxi2 ^ 4 * f - 8 * vyi1 ^ 2 * x ^ 2 * vxi1 ^ 4 * f ^ 2 - 4 * vyi1 ^ 4 * x ^ 2 * f ^ 2 * vxi1 ^ 2 - 4 * vyi1 ^ 4 * x ^ 2 * f ^ 2 * vxi2 ^ 2 + 12 * vyi1 ^ 2 * vxi1 ^ 3 * vxi2 * x + 12 * vyi1 ^ 2 * vxi1 * vxi2 ^ 3 * x - 4 * vyi1 ^ 2 * x ^ 2 * vxi1 ^ 2 * vxi2 ^ 2 - 2 * vyi1 ^ 2 * x ^ 2 * vxi1 ^ 2 * vyi2 ^ 2 + 8 * vyi1 ^ 2 * x ^ 2 * vxi1 ^ 4 * f - 2 * vyi1 ^ 2 * x ^ 2 * vxi2 ^ 2 * vyi2 ^ 2 + 8 * vyi1 ^ 2 * x ^ 2 * vxi2 ^ 4 * f - 16 * vyi1 * vxi2 ^ 3 * vyi2 * vxi1 + 4 * vyi1 * vxi2 ^ 4 * vyi2 * x - 8 * vyi1 * vyi2 ^ 3 * vxi1 * vxi2 + 16 * vyi2 ^ 2 * vxi1 ^ 2 * x * vxi2 ^ 2 - 4 * vyi2 ^ 4 * x ^ 2 * f ^ 2 * vxi1 ^ 2 - 4 * vyi2 ^ 4 * x ^ 2 * f ^ 2 * vxi2 ^ 2 + 4 * vyi1 ^ 3 * x * vyi2 * vxi1 ^ 2 + 4 * vyi1 ^ 3 * x * vyi2 * vxi2 ^ 2 + 4 * vyi1 ^ 4 * x * vxi1 * vxi2 + 4 * vyi1 ^ 4 * x ^ 2 * vxi1 ^ 2 * f + 4 * vyi1 ^ 4 * x ^ 2 * vxi2 ^ 2 * f + 4 * vyi2 ^ 3 * x * vyi1 * vxi1 ^ 2 + 4 * vyi2 ^ 3 * x * vyi1 * vxi2 ^ 2 + 4 * vyi2 ^ 4 * x * vxi1 * vxi2 + 4 * vyi2 ^ 4 * x ^ 2 * vxi1 ^ 2 * f + 4 * vyi2 ^ 4 * x ^ 2 * vxi2 ^ 2 * f - 8 * vyi1 ^ 3 * vyi2 * vxi1 * vxi2 - 12 * vyi1 ^ 2 * vyi2 ^ 2 * vxi1 * vxi2 + 4 * vyi1 ^ 2 * vyi2 ^ 2 * x * vxi1 ^ 2 + 4 * vyi1 ^ 2 * vyi2 ^ 2 * x * vxi2 ^ 2 - 24 * vyi1 * vxi1 ^ 2 * vyi2 * vxi2 ^ 2 + 16 * vyi1 ^ 2 * vxi1 ^ 2 * x * vxi2 ^ 2 - 16 * vyi1 * vxi1 ^ 3 * vyi2 * vxi2 + 4 * vyi1 * vxi1 ^ 4 * vyi2 * x + 2 * vxi1 ^ 6 * x - vxi1 ^ 6 * x ^ 2 - 4 * vxi1 ^ 6 * x ^ 2 * f ^ 2 + 4 * vxi1 ^ 6 * x ^ 2 * f - 2 * vyi1 ^ 2 * x ^ 2 * vxi1 ^ 4 - 2 * vyi1 ^ 2 * x ^ 2 * vxi2 ^ 4 + 2 * vyi1 ^ 4 * x * vxi1 ^ 2 + 2 * vyi1 ^ 4 * x * vxi2 ^ 2 - vyi1 ^ 4 * x ^ 2 * vxi1 ^ 2 - vyi1 ^ 4 * x ^ 2 * vxi2 ^ 2 + 2 * vyi2 ^ 4 * x * vxi1 ^ 2 + 2 * vyi2 ^ 4 * x * vxi2 ^ 2 - vyi2 ^ 4 * x ^ 2 * vxi1 ^ 2 - 2 * vxi2 * vxi1 ^ 5 * x ^ 2 - 2 * vxi2 ^ 5 * vxi1 * x ^ 2 - 4 * vxi2 ^ 3 * vxi1 ^ 3 * x ^ 2 + 14 * vxi1 ^ 2 * vxi2 ^ 4 * x - 3 * vxi1 ^ 2 * x ^ 2 * vxi2 ^ 4 - 3 * vxi1 ^ 4 * x ^ 2 * vxi2 ^ 2 + 8 * vxi1 ^ 5 * vxi2 * x + 16 * vxi1 ^ 3 * vxi2 ^ 3 * x + 14 * vxi1 ^ 4 * x * vxi2 ^ 2 - 4 * vxi2 ^ 6 * x ^ 2 * f ^ 2 + 4 * vxi2 ^ 6 * x ^ 2 * f + 8 * vxi2 ^ 5 * vxi1 * x - 2 * vyi2 ^ 4 * vxi1 * vxi2 - 2 * vyi2 ^ 2 * x ^ 2 * vxi1 ^ 4 - 2 * vyi2 ^ 2 * x ^ 2 * vxi2 ^ 4 - vyi2 ^ 4 * x ^ 2 * vxi2 ^ 2 - 4 * vyi1 ^ 3 * vyi2 * vxi1 ^ 2 - 4 * vyi1 ^ 3 * vyi2 * vxi2 ^ 2 - 6 * vyi1 ^ 2 * vyi2 ^ 2 * vxi1 ^ 2 - 6 * vyi1 ^ 2 * vyi2 ^ 2 * vxi2 ^ 2 - 12 * vyi1 ^ 2 * vxi1 ^ 2 * vxi2 ^ 2 - 4 * vyi1 * vxi1 ^ 4 * vyi2 - 8 * vyi1 ^ 2 * vxi1 ^ 3 * vxi2 + 4 * vyi1 ^ 2 * vxi1 ^ 4 * x - 4 * vyi1 * vxi1 ^ 2 * vyi2 ^ 3 - 4 * vyi1 * vxi2 ^ 4 * vyi2 - 8 * vyi1 ^ 2 * vxi2 ^ 3 * vxi1 + 4 * vyi1 ^ 2 * vxi2 ^ 4 * x - 4 * vyi1 * vxi2 ^ 2 * vyi2 ^ 3 - 12 * vyi2 ^ 2 * vxi1 ^ 2 * vxi2 ^ 2 - 8 * vyi2 ^ 2 * vxi1 ^ 3 * vxi2 + 4 * vyi2 ^ 2 * vxi1 ^ 4 * x - 8 * vyi2 ^ 2 * vxi2 ^ 3 * vxi1 + 4 * vyi2 ^ 2 * vxi2 ^ 4 * x - 2 * vyi1 ^ 4 * vxi1 * vxi2 - vxi1 ^ 6 - vxi2 ^ 6 - 2 * vyi2 ^ 2 * vxi1 ^ 4 - vyi2 ^ 4 * vxi1 ^ 2 - 2 * vyi2 ^ 2 * vxi2 ^ 4 - vyi2 ^ 4 * vxi2 ^ 2 - 15 * vxi1 ^ 4 * vxi2 ^ 2 - 6 * vxi1 ^ 5 * vxi2 - 20 * vxi1 ^ 3 * vxi2 ^ 3 - 15 * vxi1 ^ 2 * vxi2 ^ 4 - 6 * vxi2 ^ 5 * vxi1 + 2 * vxi2 ^ 6 * x - vxi2 ^ 6 * x ^ 2 - 2 * vyi1 ^ 2 * vxi1 ^ 4 - vyi1 ^ 4 * vxi1 ^ 2 - 2 * vyi1 ^ 2 * vxi2 ^ 4 - vyi1 ^ 4 * vxi2 ^ 2 + 16 * vxi2 ^ 3 * vxi1 * x ^ 2 * f * vyi2 ^ 2 - 16 * vxi2 * vxi1 ^ 3 * x ^ 2 * f ^ 2 * vyi2 ^ 2 - 16 * vxi2 * vxi1 ^ 3 * x ^ 2 * f ^ 2 * vyi1 ^ 2 + 16 * vxi2 * vxi1 ^ 3 * x ^ 2 * f * vyi1 ^ 2 + 16 * vxi2 * vxi1 ^ 3 * x ^ 2 * f * vyi2 ^ 2 - 16 * vxi2 ^ 3 * vxi1 * x ^ 2 * f ^ 2 * vyi2 ^ 2 - 16 * vxi2 ^ 3 * vxi1 * x ^ 2 * f ^ 2 * vyi1 ^ 2 + 16 * vxi2 ^ 3 * vxi1 * x ^ 2 * f * vyi1 ^ 2 - 8 * vxi2 * vxi1 * x ^ 2 * vyi2 ^ 4 * f ^ 2 + 8 * vxi2 * vxi1 * x ^ 2 * vyi2 ^ 4 * f - 8 * vxi2 * vxi1 * x ^ 2 * vyi1 ^ 4 * f ^ 2 + 8 * vxi2 * vxi1 * x ^ 2 * vyi1 ^ 4 * f - 4 * vxi2 * vxi1 * x ^ 2 * vyi1 ^ 2 * vyi2 ^ 2 - 16 * vyi2 ^ 2 * x ^ 2 * vxi1 ^ 2 * f ^ 2 * vxi2 ^ 2 - 16 * vyi1 ^ 2 * x ^ 2 * vxi1 ^ 2 * f ^ 2 * vxi2 ^ 2 - 8 * vyi1 ^ 2 * x ^ 2 * vxi1 ^ 2 * f ^ 2 * vyi2 ^ 2 - 8 * vyi1 ^ 2 * x ^ 2 * vxi2 ^ 2 * f ^ 2 * vyi2 ^ 2 + 8 * vyi1 * vxi1 ^ 3 * vxi2 * vyi2 * x + 8 * vyi1 * vxi1 * vxi2 ^ 3 * vyi2 * x + 16 * vyi1 ^ 2 * x ^ 2 * vxi1 ^ 2 * vxi2 ^ 2 * f + 8 * vyi1 ^ 2 * x ^ 2 * vxi1 ^ 2 * vyi2 ^ 2 * f + 8 * vyi1 ^ 2 * x ^ 2 * vxi2 ^ 2 * vyi2 ^ 2 * f + 16 * vyi2 ^ 2 * x ^ 2 * vxi1 ^ 2 * vxi2 ^ 2 * f + 8 * vyi1 * vxi1 ^ 2 * vyi2 * x * vxi2 ^ 2 + 8 * vyi1 ^ 2 * vxi1 * vxi2 * x * vyi2 ^ 2 + 8 * vyi1 ^ 3 * x * vyi2 * vxi1 * vxi2 + 8 * vyi2 ^ 3 * x * vyi1 * vxi1 * vxi2 - 16 * vxi2 * vxi1 * x ^ 2 * vyi2 ^ 2 * f ^ 2 * vyi1 ^ 2 + 16 * vxi2 * vxi1 * x ^ 2 * vyi2 ^ 2 * f * vyi1 ^ 2)) + (vyi1 ^ 3) + (vyi2 ^ 3) - (vyi1 ^ 3 * x) - (vyi2 ^ 3 * x) + (3 * vyi1 ^ 2 * vyi2) + (vyi1 * vxi1 ^ 2) + (vyi1 * vxi2 ^ 2) + (3 * vyi1 * vyi2 ^ 2) + (vyi2 * vxi1 ^ 2) + (vyi2 * vxi2 ^ 2)) / (vyi2 ^ 2 + vxi1 ^ 2 + 2 * vyi2 * vyi1 + vxi2 ^ 2 + vyi1 ^ 2 + 2 * vxi2 * vxi1) * vyi2 - (2 * vyi2 * vyi1) + (2 * vxi2 * vxi1) + (vxi1 ^ 2) - (vyi1 ^ 2) + (vxi2 ^ 2) - (vyi2 ^ 2) - (2 * x * vxi1 ^ 2 * f) - (2 * x * vxi2 ^ 2 * f) - (2 * x * vyi2 ^ 2 * f) - (2 * x * vyi1 ^ 2 * f) + (x * vxi1 ^ 2) + (vyi1 ^ 2 * x) + (vxi2 ^ 2 * x) + (vyi2 ^ 2 * x)) / (vxi1 + vxi2) / 0.2e1;
vyf2 = -((2 * vyi1 * x * vxi1 ^ 2 * f) + (2 * vyi1 * x * vxi2 ^ 2 * f) + (2 * vyi1 * x * vyi2 ^ 2 * f) + (2 * vyi2 * x * vxi1 ^ 2 * f) + (2 * vyi2 * x * vxi2 ^ 2 * f) + (2 * vyi2 * x * vyi1 ^ 2 * f) + (2 * vyi2 ^ 3 * x * f) + (2 * vyi1 ^ 3 * x * f) + (2 * vyi1 * vxi1 * vxi2) - (vyi1 * x * vxi1 ^ 2) - (vyi1 * x * vxi2 ^ 2) - (vyi1 * x * vyi2 ^ 2) + (2 * vyi2 * vxi1 * vxi2) - (vyi2 * x * vxi1 ^ 2) - (vyi2 * x * vyi1 ^ 2) - (vyi2 * x * vxi2 ^ 2) + sqrt((-16 * vxi2 ^ 3 * vxi1 ^ 3 * x ^ 2 * f ^ 2 + 16 * vxi2 ^ 3 * vxi1 ^ 3 * x ^ 2 * f - 2 * vxi2 * vxi1 * x ^ 2 * vyi1 ^ 4 - 2 * vxi2 * vxi1 * x ^ 2 * vyi2 ^ 4 - 8 * vxi2 * vxi1 ^ 5 * x ^ 2 * f ^ 2 + 8 * vxi2 * vxi1 ^ 5 * x ^ 2 * f - 8 * vxi2 ^ 5 * vxi1 * x ^ 2 * f ^ 2 + 8 * vxi2 ^ 5 * vxi1 * x ^ 2 * f - 4 * vxi2 * vxi1 ^ 3 * x ^ 2 * vyi1 ^ 2 - 4 * vxi2 * vxi1 ^ 3 * x ^ 2 * vyi2 ^ 2 - 4 * vxi2 ^ 3 * vxi1 * x ^ 2 * vyi1 ^ 2 - 4 * vxi2 ^ 3 * vxi1 * x ^ 2 * vyi2 ^ 2 + 12 * vxi1 ^ 4 * x ^ 2 * f * vxi2 ^ 2 - 12 * vxi1 ^ 2 * x ^ 2 * vxi2 ^ 4 * f ^ 2 + 12 * vxi1 ^ 2 * x ^ 2 * vxi2 ^ 4 * f - 12 * vxi1 ^ 4 * x ^ 2 * f ^ 2 * vxi2 ^ 2 - 8 * vyi1 ^ 2 * x ^ 2 * vxi2 ^ 4 * f ^ 2 - 8 * vyi2 ^ 2 * x ^ 2 * vxi1 ^ 4 * f ^ 2 - 8 * vyi2 ^ 2 * x ^ 2 * vxi2 ^ 4 * f ^ 2 + 12 * vyi2 ^ 2 * vxi1 ^ 3 * vxi2 * x + 12 * vyi2 ^ 2 * vxi1 * vxi2 ^ 3 * x - 4 * vyi2 ^ 2 * x ^ 2 * vxi1 ^ 2 * vxi2 ^ 2 + 8 * vyi2 ^ 2 * x ^ 2 * vxi1 ^ 4 * f + 8 * vyi2 ^ 2 * x ^ 2 * vxi2 ^ 4 * f - 8 * vyi1 ^ 2 * x ^ 2 * vxi1 ^ 4 * f ^ 2 - 4 * vyi1 ^ 4 * x ^ 2 * f ^ 2 * vxi1 ^ 2 - 4 * vyi1 ^ 4 * x ^ 2 * f ^ 2 * vxi2 ^ 2 + 12 * vyi1 ^ 2 * vxi1 ^ 3 * vxi2 * x + 12 * vyi1 ^ 2 * vxi1 * vxi2 ^ 3 * x - 4 * vyi1 ^ 2 * x ^ 2 * vxi1 ^ 2 * vxi2 ^ 2 - 2 * vyi1 ^ 2 * x ^ 2 * vxi1 ^ 2 * vyi2 ^ 2 + 8 * vyi1 ^ 2 * x ^ 2 * vxi1 ^ 4 * f - 2 * vyi1 ^ 2 * x ^ 2 * vxi2 ^ 2 * vyi2 ^ 2 + 8 * vyi1 ^ 2 * x ^ 2 * vxi2 ^ 4 * f - 16 * vyi1 * vxi2 ^ 3 * vyi2 * vxi1 + 4 * vyi1 * vxi2 ^ 4 * vyi2 * x - 8 * vyi1 * vyi2 ^ 3 * vxi1 * vxi2 + 16 * vyi2 ^ 2 * vxi1 ^ 2 * x * vxi2 ^ 2 - 4 * vyi2 ^ 4 * x ^ 2 * f ^ 2 * vxi1 ^ 2 - 4 * vyi2 ^ 4 * x ^ 2 * f ^ 2 * vxi2 ^ 2 + 4 * vyi1 ^ 3 * x * vyi2 * vxi1 ^ 2 + 4 * vyi1 ^ 3 * x * vyi2 * vxi2 ^ 2 + 4 * vyi1 ^ 4 * x * vxi1 * vxi2 + 4 * vyi1 ^ 4 * x ^ 2 * vxi1 ^ 2 * f + 4 * vyi1 ^ 4 * x ^ 2 * vxi2 ^ 2 * f + 4 * vyi2 ^ 3 * x * vyi1 * vxi1 ^ 2 + 4 * vyi2 ^ 3 * x * vyi1 * vxi2 ^ 2 + 4 * vyi2 ^ 4 * x * vxi1 * vxi2 + 4 * vyi2 ^ 4 * x ^ 2 * vxi1 ^ 2 * f + 4 * vyi2 ^ 4 * x ^ 2 * vxi2 ^ 2 * f - 8 * vyi1 ^ 3 * vyi2 * vxi1 * vxi2 - 12 * vyi1 ^ 2 * vyi2 ^ 2 * vxi1 * vxi2 + 4 * vyi1 ^ 2 * vyi2 ^ 2 * x * vxi1 ^ 2 + 4 * vyi1 ^ 2 * vyi2 ^ 2 * x * vxi2 ^ 2 - 24 * vyi1 * vxi1 ^ 2 * vyi2 * vxi2 ^ 2 + 16 * vyi1 ^ 2 * vxi1 ^ 2 * x * vxi2 ^ 2 - 16 * vyi1 * vxi1 ^ 3 * vyi2 * vxi2 + 4 * vyi1 * vxi1 ^ 4 * vyi2 * x + 2 * vxi1 ^ 6 * x - vxi1 ^ 6 * x ^ 2 - 4 * vxi1 ^ 6 * x ^ 2 * f ^ 2 + 4 * vxi1 ^ 6 * x ^ 2 * f - 2 * vyi1 ^ 2 * x ^ 2 * vxi1 ^ 4 - 2 * vyi1 ^ 2 * x ^ 2 * vxi2 ^ 4 + 2 * vyi1 ^ 4 * x * vxi1 ^ 2 + 2 * vyi1 ^ 4 * x * vxi2 ^ 2 - vyi1 ^ 4 * x ^ 2 * vxi1 ^ 2 - vyi1 ^ 4 * x ^ 2 * vxi2 ^ 2 + 2 * vyi2 ^ 4 * x * vxi1 ^ 2 + 2 * vyi2 ^ 4 * x * vxi2 ^ 2 - vyi2 ^ 4 * x ^ 2 * vxi1 ^ 2 - 2 * vxi2 * vxi1 ^ 5 * x ^ 2 - 2 * vxi2 ^ 5 * vxi1 * x ^ 2 - 4 * vxi2 ^ 3 * vxi1 ^ 3 * x ^ 2 + 14 * vxi1 ^ 2 * vxi2 ^ 4 * x - 3 * vxi1 ^ 2 * x ^ 2 * vxi2 ^ 4 - 3 * vxi1 ^ 4 * x ^ 2 * vxi2 ^ 2 + 8 * vxi1 ^ 5 * vxi2 * x + 16 * vxi1 ^ 3 * vxi2 ^ 3 * x + 14 * vxi1 ^ 4 * x * vxi2 ^ 2 - 4 * vxi2 ^ 6 * x ^ 2 * f ^ 2 + 4 * vxi2 ^ 6 * x ^ 2 * f + 8 * vxi2 ^ 5 * vxi1 * x - 2 * vyi2 ^ 4 * vxi1 * vxi2 - 2 * vyi2 ^ 2 * x ^ 2 * vxi1 ^ 4 - 2 * vyi2 ^ 2 * x ^ 2 * vxi2 ^ 4 - vyi2 ^ 4 * x ^ 2 * vxi2 ^ 2 - 4 * vyi1 ^ 3 * vyi2 * vxi1 ^ 2 - 4 * vyi1 ^ 3 * vyi2 * vxi2 ^ 2 - 6 * vyi1 ^ 2 * vyi2 ^ 2 * vxi1 ^ 2 - 6 * vyi1 ^ 2 * vyi2 ^ 2 * vxi2 ^ 2 - 12 * vyi1 ^ 2 * vxi1 ^ 2 * vxi2 ^ 2 - 4 * vyi1 * vxi1 ^ 4 * vyi2 - 8 * vyi1 ^ 2 * vxi1 ^ 3 * vxi2 + 4 * vyi1 ^ 2 * vxi1 ^ 4 * x - 4 * vyi1 * vxi1 ^ 2 * vyi2 ^ 3 - 4 * vyi1 * vxi2 ^ 4 * vyi2 - 8 * vyi1 ^ 2 * vxi2 ^ 3 * vxi1 + 4 * vyi1 ^ 2 * vxi2 ^ 4 * x - 4 * vyi1 * vxi2 ^ 2 * vyi2 ^ 3 - 12 * vyi2 ^ 2 * vxi1 ^ 2 * vxi2 ^ 2 - 8 * vyi2 ^ 2 * vxi1 ^ 3 * vxi2 + 4 * vyi2 ^ 2 * vxi1 ^ 4 * x - 8 * vyi2 ^ 2 * vxi2 ^ 3 * vxi1 + 4 * vyi2 ^ 2 * vxi2 ^ 4 * x - 2 * vyi1 ^ 4 * vxi1 * vxi2 - vxi1 ^ 6 - vxi2 ^ 6 - 2 * vyi2 ^ 2 * vxi1 ^ 4 - vyi2 ^ 4 * vxi1 ^ 2 - 2 * vyi2 ^ 2 * vxi2 ^ 4 - vyi2 ^ 4 * vxi2 ^ 2 - 15 * vxi1 ^ 4 * vxi2 ^ 2 - 6 * vxi1 ^ 5 * vxi2 - 20 * vxi1 ^ 3 * vxi2 ^ 3 - 15 * vxi1 ^ 2 * vxi2 ^ 4 - 6 * vxi2 ^ 5 * vxi1 + 2 * vxi2 ^ 6 * x - vxi2 ^ 6 * x ^ 2 - 2 * vyi1 ^ 2 * vxi1 ^ 4 - vyi1 ^ 4 * vxi1 ^ 2 - 2 * vyi1 ^ 2 * vxi2 ^ 4 - vyi1 ^ 4 * vxi2 ^ 2 + 16 * vxi2 ^ 3 * vxi1 * x ^ 2 * f * vyi2 ^ 2 - 16 * vxi2 * vxi1 ^ 3 * x ^ 2 * f ^ 2 * vyi2 ^ 2 - 16 * vxi2 * vxi1 ^ 3 * x ^ 2 * f ^ 2 * vyi1 ^ 2 + 16 * vxi2 * vxi1 ^ 3 * x ^ 2 * f * vyi1 ^ 2 + 16 * vxi2 * vxi1 ^ 3 * x ^ 2 * f * vyi2 ^ 2 - 16 * vxi2 ^ 3 * vxi1 * x ^ 2 * f ^ 2 * vyi2 ^ 2 - 16 * vxi2 ^ 3 * vxi1 * x ^ 2 * f ^ 2 * vyi1 ^ 2 + 16 * vxi2 ^ 3 * vxi1 * x ^ 2 * f * vyi1 ^ 2 - 8 * vxi2 * vxi1 * x ^ 2 * vyi2 ^ 4 * f ^ 2 + 8 * vxi2 * vxi1 * x ^ 2 * vyi2 ^ 4 * f - 8 * vxi2 * vxi1 * x ^ 2 * vyi1 ^ 4 * f ^ 2 + 8 * vxi2 * vxi1 * x ^ 2 * vyi1 ^ 4 * f - 4 * vxi2 * vxi1 * x ^ 2 * vyi1 ^ 2 * vyi2 ^ 2 - 16 * vyi2 ^ 2 * x ^ 2 * vxi1 ^ 2 * f ^ 2 * vxi2 ^ 2 - 16 * vyi1 ^ 2 * x ^ 2 * vxi1 ^ 2 * f ^ 2 * vxi2 ^ 2 - 8 * vyi1 ^ 2 * x ^ 2 * vxi1 ^ 2 * f ^ 2 * vyi2 ^ 2 - 8 * vyi1 ^ 2 * x ^ 2 * vxi2 ^ 2 * f ^ 2 * vyi2 ^ 2 + 8 * vyi1 * vxi1 ^ 3 * vxi2 * vyi2 * x + 8 * vyi1 * vxi1 * vxi2 ^ 3 * vyi2 * x + 16 * vyi1 ^ 2 * x ^ 2 * vxi1 ^ 2 * vxi2 ^ 2 * f + 8 * vyi1 ^ 2 * x ^ 2 * vxi1 ^ 2 * vyi2 ^ 2 * f + 8 * vyi1 ^ 2 * x ^ 2 * vxi2 ^ 2 * vyi2 ^ 2 * f + 16 * vyi2 ^ 2 * x ^ 2 * vxi1 ^ 2 * vxi2 ^ 2 * f + 8 * vyi1 * vxi1 ^ 2 * vyi2 * x * vxi2 ^ 2 + 8 * vyi1 ^ 2 * vxi1 * vxi2 * x * vyi2 ^ 2 + 8 * vyi1 ^ 3 * x * vyi2 * vxi1 * vxi2 + 8 * vyi2 ^ 3 * x * vyi1 * vxi1 * vxi2 - 16 * vxi2 * vxi1 * x ^ 2 * vyi2 ^ 2 * f ^ 2 * vyi1 ^ 2 + 16 * vxi2 * vxi1 * x ^ 2 * vyi2 ^ 2 * f * vyi1 ^ 2)) + (vyi1 ^ 3) + (vyi2 ^ 3) - (vyi1 ^ 3 * x) - (vyi2 ^ 3 * x) + (3 * vyi1 ^ 2 * vyi2) + (vyi1 * vxi1 ^ 2) + (vyi1 * vxi2 ^ 2) + (3 * vyi1 * vyi2 ^ 2) + (vyi2 * vxi1 ^ 2) + (vyi2 * vxi2 ^ 2)) / (vyi2 ^ 2 + vxi1 ^ 2 + 2 * vyi2 * vyi1 + vxi2 ^ 2 + vyi1 ^ 2 + 2 * vxi2 * vxi1) / 0.2e1 + vyi1 + vyi2;

%%% SWAP THE SIGNS HERE ---------------------------------------------------

% Phantom Euler method step to approximately calculate new positions
rx1_new = rxi1 + dt*vxf1;
ry1_new = ryi1 + dt*vyf1;
rx2_new = rxi2 + dt*vxf2;
ry2_new = ryi2 + dt*vyf2;

% Calculate the old and new separations, coordinate-wise
old_x_sep = abs(rxi1 - rxi2);
old_y_sep = abs(ryi1 - ryi2); 

new_x_sep = abs(rx1_new - rx2_new);
new_y_sep = abs(ry1_new - ry2_new); 

% Swap sign of velocity if, along that coordinate axis, bodies moved closer
if (old_x_sep >= new_x_sep)
    vxf1 = -vxf1;
    vxf2 = -vxf2;
end

if (old_y_sep >= new_y_sep)
    vyf1 = -vyf1;
    vyf2 = -vyf2;
end

%%% -----------------------------------------------------------------------

if ~(isreal(vyf1) && isreal(vyf2) && isreal(vxf1) && isreal(vxf2))
    fail = 1;
    fprintf('Problem!  Fractionation not achievable.\n');
    error('Fractionation failure');
end
end

%checkf = (vxf1 ^ 2 + vyf1 ^ 2) / (vxf1 ^ 2 + vyf1 ^ 2 + vxf2 ^ 2 + vyf2 ^ 2);
%fprintf(1, 'Final energy fraction in body 1 is %f.\n', checkf);



